<%- include("../../views/partials/admin/header") %>
<style>
    .content-wrapper {
        padding: 2rem;
        margin-left: 73px;
        background-color: #f8f9fa;
        min-height: 100vh;
    }

    .page-header {
        margin-bottom: 2rem;
    }

    .page-title {
        font-size: 1.75rem;
        font-weight: 500;
        color: #2c3e50;
        margin-bottom: 0.5rem;
    }

    .card {
        background-color: #ffffff;
        border-radius: 10px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.08);
        padding: 2rem;
        max-width: 800px;
        margin: 0 auto;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-label {
        display: block;
        font-weight: 500;
        color: #2c3e50;
        margin-bottom: 0.5rem;
        font-size: 0.95rem;
    }

    .form-control {
        width: 100%;
        padding: 0.75rem 1rem;
        font-size: 0.95rem;
        line-height: 1.5;
        color: #2c3e50;
        background-color: #ffffff;
        border: 1px solid #e2e8f0;
        border-radius: 6px;
        transition: all 0.2s ease-in-out;
    }

    .form-control:focus {
        border-color: #4a90e2;
        box-shadow: 0 0 0 3px rgba(74, 144, 226, 0.1);
        outline: none;
    }

    textarea.form-control {
        min-height: 120px;
        resize: vertical;
    }

    .btn {
        display: inline-block;
        font-weight: 500;
        text-align: center;
        vertical-align: middle;
        cursor: pointer;
        padding: 0.75rem 1.5rem;
        font-size: 0.95rem;
        line-height: 1.5;
        border-radius: 6px;
        transition: all 0.2s ease-in-out;
    }

    .btn-primary {
        color: #ffffff;
        background-color: #4a90e2;
        border: none;
    }

    .btn-primary:hover {
        background-color: #357abd;
        transform: translateY(-1px);
    }

    .btn-primary:active {
        transform: translateY(0);
    }

    .actions {
        display: flex;
        justify-content: flex-end;
        margin-top: 2rem;
    }

    .form-hint {
        font-size: 0.85rem;
        color: #718096;
        margin-top: 0.25rem;
    }
</style>

<div class="content-wrapper">
    <div class="page-header">
        <h1 class="page-title">Edit Category</h1>
    </div>

    <div class="card">
        <form id="editCategoryForm">
            <div class="form-group">
                <label for="categoryName" class="form-label">Category Name</label>
                <input
                    type="text"
                    name="categoryName"
                    id="categoryName"
                    class="form-control"
                    value="<%=category.name%>"
                    placeholder="Enter category name"
                />
                <div class="form-hint">Choose a clear and concise name for your category</div>
            </div>

            <div class="form-group">
                <label for="description" class="form-label">Description</label>
                <textarea
                    name="description"
                    id="description"
                    class="form-control"
                    placeholder="Enter category description"
                ><%=category.description%></textarea>
                <div class="form-hint">Provide a detailed description of what this category represents</div>
            </div>

            <div class="actions">
                <button class="btn btn-primary" type="submit">Update Category</button>
            </div>
        </form>
    </div>
</div>

<%- include("../../views/partials/admin/footer") %>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
   
   async function submitForm(event) {
    event.preventDefault(); // Prevent the form's default submission behavior

    // Get form values
    const categoryName = document.getElementById('categoryName').value.trim();
    const description = document.getElementById('description').value.trim();

    if (!categoryName || !description) {
        Swal.fire({
            icon: 'warning',
            title: 'Missing Fields',
            text: 'Both fields are required.',
        });
        return;
    }

    // Extract the 'id' from the URL query string
    const urlParams = new URLSearchParams(window.location.search);
    const id = urlParams.get('id');

    if (!id) {
        Swal.fire({
            icon: 'error',
            title: 'Category ID Not Found',
            text: 'Category ID not found in the URL.',
        });
        return;
    }

    // Prepare form data
    const formData = { categoryName, description };

    try {
        // Make a POST request to the backend
        const response = await fetch(`/admin/editCategory?id=${id}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(formData),
        });

        if (response.ok) {
            const data = await response.json();
            Swal.fire({
                icon: 'success',
                title: 'Success',
                text: 'Category updated successfully!',
            }).then(() => {
                // Optional: Redirect or reload after success
                window.location.href = '/admin/category';
            });
            console.log(data);
        } else {
            const errorData = await response.json();
            Swal.fire({
                icon: 'error',
                title: 'Failed to Update',
                text: errorData.message || 'Unknown error occurred.',
            });
            console.error('Error:', errorData);
        }
    } catch (error) {
        console.error('Fetch error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An error occurred while updating the category.',
        });
    }
}

// Attach the submit handler to the form
document.getElementById('editCategoryForm').addEventListener('submit', submitForm);

</script>