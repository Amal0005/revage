<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Login</title>
    <style>
       /* General Reset */
/* General Reset */
body, html {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Poppins', sans-serif;
}

/* Body Styling */
body {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background: #f8f9fa; /* Light gray */
}

/* Login Container */
.login-container {
    position: relative;
    background: white;
    background-size: cover;
    border-radius: 12px;
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
    width: 400px;
    padding: 40px;
    text-align: center;
    color: #ffffff;
}

.login-container::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5); /* Black overlay with 50% opacity */
    border-radius: 12px;
    z-index: -1; /* Places it behind the content */
}


/* Header Styling */
.login-container h2 {
    margin-bottom: 20px;
    font-size: 2rem;
    color: #333333; /* Dark gray */
    font-weight: bold;
}

/* Input Fields */
.login-container input {
    width: 100%;
    padding: 14px;
    margin: 12px 0;
    border: 1px solid #ddd;
    border-radius: 8px;
    font-size: 1rem;
    transition: border-color 0.3s ease, box-shadow 0.3s ease;
}

.login-container input:focus {
    border-color: #6a11cb; /* Purple border on focus */
    outline: none;
    box-shadow: 0 0 8px rgba(106, 17, 203, 0.3);
}

/* Button Styling */
.login-container button {
    width: 100%;
    padding: 14px;
    background: linear-gradient(135deg, #000000, #969696); /* Purple to blue gradient */
    color: #ffffff; /* White text */
    border: none;
    border-radius: 8px;
    font-size: 1rem;
    font-weight: bold;
    cursor: pointer;
    transition: background 0.3s ease, transform 0.3s ease;
}

.login-container button:hover {
    background: linear-gradient(135deg, #ffffff, #000000);
    transform: translateY(-3px);
}

.login-container button:active {
    transform: translateY(2px);
}

/* Social Login Button */
.social-btns {
    display: flex;
    justify-content: center;
    margin: 20px 0;
}

.google-btn {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 16px;
    font-weight: bold;
    color: #fff;
    background: #4285f4; /* Google blue */
    border: none;
    padding: 12px 20px;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    cursor: pointer;
    transition: background 0.3s ease, transform 0.3s ease;
}


/* Error Message */
.error-message {
    color: #ff0000; /* Red */
    font-size: 0.9rem;
    margin-bottom: 15px;
}

/* Responsive Design */
@media (max-width: 768px) {
    .login-container {
        width: 90%;
        padding: 30px;
    }
}

    </style>
</head>
<body>
    <div class="login-container">
        <h2>Admin Login</h2>
        <% if (message) { %>
            <div class="error-message"><%= message %></div>
        <% } %>
        <form action="/admin/login" method="POST" id="loginForm">
            <input type="text" name="email" id="email" placeholder="Username" >
            <input type="password" name="password" id="password" placeholder="Password" >
            <button type="submit">Login</button>
        </form>
        <div id="error-message" style="color:red;"></div>
    </div>

    <script>
        // Adding a listener to the form's submit event
        document.getElementById("loginForm").addEventListener("submit", function(event) {
            // Clear any previous error message
            let errorMessage = document.getElementById("error-message");
            errorMessage.textContent = '';

            // Get form data
            let email = document.getElementById("email").value;
            let password = document.getElementById("password").value;

            // Basic validation for empty fields
            if (!email || !password) {
                errorMessage.textContent = "Both fields are required!";
                event.preventDefault(); // Prevent form submission
                return;
            }

            // Simple email format validation (adjust regex as needed)
            let emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}$/;
            if (!emailPattern.test(email)) {
                errorMessage.textContent = "Please enter a valid email address.";
                event.preventDefault(); // Prevent form submission
                return;
            }
        });
    </script>
</body>
</html>
