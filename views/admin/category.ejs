<style>
  /* Base Styles */
body {
    font-family: 'Arial', sans-serif;
    margin: 0;
    background-color: #f8f9fa;
}

.navbar-aside {
    width: 260px;
    background: #ffffff;
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    transition: width 0.3s ease-in-out;
}

.navbar-aside:hover {
    width: 280px;
}

.brand-wrap {
    text-align: center;
    padding: 20px;
    display: block;
    font-size: 1.5rem;
    letter-spacing: 2px;
    color: #2d79c0;
}

.menu-aside {
    list-style: none;
    padding: 0;
    margin: 0;
}

.menu-item {
    position: relative;
    overflow: hidden;
}

.menu-link {
    display: flex;
    align-items: center;
    padding: 15px 20px;
    text-decoration: none;
    color: #333;
    font-weight: bold;
    transition: all 0.4s ease;
}

.menu-link i {
    margin-right: 15px;
    font-size: 1.2rem;
    color: #2d79c0;
    transition: transform 0.4s ease;
}

.menu-link:hover i {
    transform: rotate(360deg);
    color: #28a745;
}

.menu-link:hover {
    background: linear-gradient(to right, #2d79c0, #28a745);
    color: #ffffff;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
}

.menu-link:hover span {
    position: relative;
    animation: bounce 0.6s ease infinite alternate;
}

@keyframes bounce {
    from {
        transform: translateY(0px);
    }
    to {
        transform: translateY(-5px);
    }
}

.menu-item.active .menu-link {
    background: #28a745;
    color: #ffffff;
}

.menu-item.active .menu-link i {
    color: #ffffff;
}

/* Responsive Sidebar */
@media (max-width: 768px) {
    .navbar-aside {
        width: 70px;
    }

    .navbar-aside:hover {
        width: 260px;
    }

    .menu-link span {
        display: none;
    }

    .navbar-aside:hover .menu-link span {
        display: inline;
    }
}

</style>
<head>
  <meta charset="utf-8">
  <title>RevAge Dashboard</title>
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="description" content="">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta property="og:title" content="">
  <meta property="og:type" content="">
  <meta property="og:url" content="">
  <meta property="og:image" content="">
  <!-- Favicon -->
  <link rel="shortcut icon" type="image/x-icon" href="">
 <!---fond-->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.1/css/all.min.css" integrity="sha512-5Hs3dF2AEPkpNAR7UiOHba+lRSJNeM2ECkwxUIxC1Q/FLycGTbNapWXB4tP889k5T5Ju8fs4b1P5z/iB4nMfSQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />
  
  <link href="/evara-backend/assets/css/main.css" rel="stylesheet" type="text/css" />
  <link rel="stylesheet" href="/evara-backend/assets/imgs">

</head>

<body>
  <div class="screen-overlay"></div>
  <aside class="navbar-aside" id="offcanvas_aside">
      <div class="aside-top">
          <a href="/" class="brand-wrap " style="font-size: 25px;text-decoration: none; color: rgb(45, 121, 192) ; font-weight: bold;">
              REVAGE
          </a>
          <div>
              <button class="btn btn-icon btn-aside-minimize"> <i class="text-muted material-icons md-menu_open"></i>
              </button>
          </div>
      </div>
      <nav>
          <ul class="menu-aside">
              <li class="menu-item ">
                  <a class="menu-link" href="/admin/dashboard"> <i class="fa-solid fa-house"></i></i>
                      <span class="text">Dashboard</span>
                  </a>
              </li>
              <li class="menu-item ">
                  <a class="menu-link" href="/admin/users"> <i class="fa-solid fa-list"></i></i>
                      <span class="text">customers</span>
                  </a>
              </li>

              <li class="menu-item active">
                  <a class="menu-link" href="/admin/category"> <i class="fa-solid fa-list"></i></i>
                      <span class="text">category</span>
                  </a>
              </li>
              <li class="menu-item">
                  <a class="menu-link" href="/admin/product-add"><i class="fa-brands fa-product-hunt"></i>
                      <span class="text">Add Products</span>
                  </a>
              </li>
              <li class="menu-item">
                  <a class="menu-link" href="/admin/products"><i class="fa-brands fa-product-hunt"></i></i>
                      <span class="text">Products</span>
                  </a>
              </li>

              <li class="menu-item">
                  <a class="menu-link" href="/admin/orders"><i class="fa-brands fa-product-hunt"></i></i>
                      <span class="text">orders</span>
                  </a>
              </li>

          </ul>
          <br>
          <br>
      </nav>
  </aside>


  <main class="main-wrap">
      <!-- <header class="main-header navbar"> -->
          <div class="col-search">
             
              </form>
          </div>
          <div class="col-nav">
              <button class="btn btn-icon btn-mobile me-auto" data-trigger="#offcanvas_aside"> <i
                      class="material-icons md-apps"></i> </button>
              <ul class="nav">
                  <!-- <li class="dropdown nav-item">
                      <a class="dropdown-toggle" data-bs-toggle="dropdown" href="#" id="dropdownAccount"
                          aria-expanded="false"> <img class="img-xs rounded-circle"
                              src='https://wallpapers.com/images/hd/viking-archery-fy7xjdref2rezzoj.jpg'
                              alt="User"></a>
                      <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownAccount">
                          <a class="dropdown-item text-danger" href="/admin/logout"><i
                                  class="material-icons md-exit_to_app"></i>Logout</a>
                      </div>
                  </li> -->
              </ul>
          </div>
      </header>
<head>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"/>
  <link rel="stylesheet" href="/path/to/your/custom/styles.css"/>
  <style>
    /* Base Styles */
/* Modern Minimal Styles */
/* Form Container Styles */
.card {
    background: #ffffff;
    border-radius: 16px;
    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.06);
    transition: transform 0.3s ease;
    border: none;
    margin-bottom: 2rem;
}

.card:hover {
    transform: translateY(-2px);
}

.card-body {
    padding: 2rem;
}

/* Form Header */
h4 {
    color: #2d3748;
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 1.5rem;
    position: relative;
    padding-bottom: 0.75rem;
}

h4::after {
    content: '';
    position: absolute;
    left: 0;
    bottom: 0;
    width: 50px;
    height: 3px;
    background: #000000;
    border-radius: 2px;
}

/* Form Group Styles */
.mb-4 {
    margin-bottom: 1.5rem;
}

.form-label {
    display: block;
    font-size: 0.95rem;
    font-weight: 500;
    color: #4a5568;
    margin-bottom: 0.5rem;
    transition: color 0.2s ease;
}

/* Input Styles */
.form-control {
    width: 100%;
    padding: 0.75rem 1rem;
    font-size: 0.95rem;
    line-height: 1.5;
    color: #2d3748;
    background-color: #fff;
    border: 2px solid #e2e8f0;
    border-radius: 10px;
    transition: all 0.3s ease;
}

.form-control:focus {
    border-color: #000000;
    box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);
    outline: none;
}

.form-control::placeholder {
    color: #a0aec0;
}

/* Textarea Specific Styles */
textarea.form-control {
    min-height: 120px;
    resize: vertical;
}

/* Error Message Styles */
.error-message {
    color: #ef4444;
    font-size: 0.875rem;
    margin-top: 0.5rem;
    display: none;
    animation: fadeIn 0.3s ease;
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(-10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Button Styles */
.d-grid {
    display: grid;
    gap: 1rem;
}

.btn {
    position: relative;
    padding: 0.75rem 1.5rem;
    font-size: 0.95rem;
    font-weight: 500;
    text-align: center;
    border-radius: 10px;
    transition: all 0.3s ease;
    border: none;
    cursor: pointer;
    overflow: hidden;
}

.btn-primary {
    background: linear-gradient(135deg, #000000, #4f4f4f);
    color: white;
    box-shadow: 0 4px 12px rgba(79, 70, 229, 0.2);
}

.btn-primary:hover {
    background: linear-gradient(135deg, #000000, #333333);
    transform: translateY(-1px);
    box-shadow: 0 6px 16px rgba(79, 70, 229, 0.3);
}

.btn-primary:active {
    transform: translateY(1px);
}

/* Add ripple effect */
.btn::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: width 0.3s ease, height 0.3s ease;
}

.btn:active::after {
    width: 200px;
    height: 200px;
    opacity: 0;
}

/* Responsive Adjustments */
@media (max-width: 768px) {
    .card-body {
        padding: 1.5rem;
    }

    h4 {
        font-size: 1.25rem;
    }

    .form-control {
        padding: 0.625rem 0.875rem;
    }

    .btn {
        padding: 0.625rem 1.25rem;
    }
}

/* Focus States for Accessibility */
.form-control:focus-visible {
    border-color: #000000;
    box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);
    outline: none;
}

/* Hover States */
.form-label:hover {
    color: #000000;
}

.form-control:hover {
    border-color: #cbd5e1;
}

/* Loading State for Button */
.btn.loading {
    background: #6b7280;
    pointer-events: none;
    opacity: 0.8;
}

.btn.loading::before {
    content: '';
    display: inline-block;
    width: 1rem;
    height: 1rem;
    border: 2px solid #fff;
    border-radius: 50%;
    border-top-color: transparent;
    animation: spin 0.8s linear infinite;
    margin-right: 0.5rem;
    vertical-align: middle;
}

@keyframes spin {
    to {
        transform: rotate(360deg);
    }
}

/* Custom Scrollbar for Textarea */
textarea.form-control::-webkit-scrollbar {
    width: 8px;
}

textarea.form-control::-webkit-scrollbar-track {
    background: #f1f5f9;
    border-radius: 4px;
}

textarea.form-control::-webkit-scrollbar-thumb {
    background: #cbd5e1;
    border-radius: 4px;
}

textarea.form-control::-webkit-scrollbar-thumb:hover {
    background: #94a3b8;
}
:root {
  --primary-color: #000000;
  --success-color: #000000;
  --danger-color: #000000;
  --text-primary: #1f2937;
  --text-secondary: #6b7280;
  --bg-light: #ffffff;
  --border-color: #e5e7eb;
}

.content-main {
  padding: 2rem;
  background-color: #ffffff;
  min-height: 100vh;
}

/* Header Styles */
.dashboard-header {
  margin-bottom: 2rem;
}

.dashboard-title {
  font-size: 1.875rem;
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: 0.5rem;
}

.dashboard-subtitle {
  color: var(--text-secondary);
  font-size: 0.975rem;
}

/* Search Box Styles */
.search-box {
  margin-bottom: 2rem;
}

.search-group {
  display: flex;
  align-items: center;
  background-color: var(--bg-light);
  border-radius: 12px;
  padding: 0.5rem 1rem;
  border: 1px solid var(--border-color);
}

.search-icon {
  color: var(--text-secondary);
  font-size: 1.25rem;
  margin-right: 0.75rem;
}

.search-input {
  flex: 1;
  border: none;
  background: none;
  padding: 0.75rem 0;
  font-size: 0.95rem;
  color: var(--text-primary);
}

.search-input:focus {
  outline: none;
}

.search-button {
  background-color: var(--primary-color);
  color: white;
  border: none;
  padding: 0.75rem 1.5rem;
  border-radius: 8px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s;
}

.search-button:hover {
  opacity: 0.9;
}

/* Table Styles */
.data-table-container {
  background-color: white;
  border-radius: 12px;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  margin-bottom: 2rem;
}

.table-wrapper {
  overflow-x: auto;
}

.data-table {
  width: 100%;
  border-collapse: separate;
  border-spacing: 0;
}

.data-table th {
  background-color: var(--bg-light);
  padding: 1rem;
  font-weight: 600;
  color: var(--text-primary);
  text-align: left;
  border-bottom: 1px solid var(--border-color);
}

.data-table td {
  padding: 1rem;
  border-bottom: 1px solid var(--border-color);
  vertical-align: middle;
}

.category-name {
  font-weight: 500;
  color: var(--text-primary);
}

.category-description {
  color: var(--text-secondary);
  font-size: 0.9rem;
}

/* Status and Offer Badges */
.status-badge, .offer-badge {
  display: inline-flex;
  align-items: center;
  padding: 0.5rem 1rem;
  border-radius: 20px;
  font-size: 0.875rem;
  font-weight: 500;
}

.status-badge.active {
  background-color: rgba(16, 185, 129, 0.1);
  color: var(--success-color);
}

.status-badge.inactive {
  background-color: rgba(239, 68, 68, 0.1);
  color: var(--danger-color);
}

.offer-badge {
  background-color: rgba(79, 70, 229, 0.1);
  color: var(--primary-color);
}

.offer-badge.active {
  background-color: rgba(16, 185, 129, 0.1);
  color: var(--success-color);
}

/* Action Buttons */
.action-buttons {
  display: flex;
  gap: 0.5rem;
}

.btn-action {
  width: 36px;
  height: 36px;
  border-radius: 8px;
  border: none;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s;
  color: white;
}

.btn-action i {
  font-size: 1.25rem;
  
}

.btn-edit {
  background-color: var(--primary-color);
  border-radius: -1px;

}
.btn-edit:hover{
  background-color: rgb(255, 255, 255); /* Background color set to black */
  color: rgb(0, 0, 0); /* Change text to black on hover */
  border-color: black; /* Ensure border remains black */
}
.btn-offer {
  background-color: var(--success-color);
  border-radius: -1px;

}
.btn-offer:hover{
  background-color: rgb(255, 255, 255); /* Background color set to black */
  color: rgb(0, 0, 0); /* Change text to black on hover */
  border-color: black; /* Ensure border remains black */
}

.btn-remove {
  background-color: var(--danger-color);
  border-radius: -1px;

}

.btn-list {
  border: 1px solid black; /* Ensure a visible black border */
  color: rgb(0, 0, 0); /* Text color set to white */
  background-color: white; /* Change background to white on hover */

  padding: 10px 15px; /* Add some padding for better appearance */
  border-radius: -1px; /* Optional: Rounded corners */
  cursor: pointer; /* Change the cursor to pointer for a button-like effect */
  font-size: 14px; /* Optional: Adjust font size */
  text-align: center; /* Center align the text */
  transition: 0.3s ease; /* Add a transition for hover effects */
}

.btn-list:hover {
  background-color: rgb(0, 0, 0); /* Background color set to black */
  color: rgb(255, 255, 255); /* Change text to black on hover */
  border-color: black; /* Ensure border remains black */
}


.btn-unlist {
  background-color: var(--danger-color);
  border-radius: -1px;

}
.btn-unlist:hover {
  background-color: rgb(255, 255, 255); /* Background color set to black */
  color: rgb(2, 2, 2); /* Change text to black on hover */
  border-color: black; /* Ensure border remains black */
}

.btn-action:hover {
  opacity: 0.9;
  transform: translateY(-1px);
}

/* Pagination Styles */
.pagination {
  margin-top: 2rem;
}

.pagination-container {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.5rem;
}

.page-numbers {
  display: flex;
  gap: 0.5rem;
}

.page-btn {
  min-width: 40px;
  height: 40px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 8px;
  background-color: var(--bg-light);
  color: var(--text-primary);
  text-decoration: none;
  transition: all 0.2s;
}

.page-btn.active {
  background-color: var(--primary-color);
  color: white;
}

.page-btn:hover:not(.active) {
  background-color: var(--border-color);
}

/* Responsive Design */
@media (max-width: 768px) {
  .content-main {
      padding: 1rem;
  }

  .action-buttons {
      flex-wrap: wrap;
  }

  .search-group {
      flex-direction: column;
      gap: 1rem;
  }

  .search-button {
      width: 100%;
  }

  .data-table th, 
  .data-table td {
      padding: 0.75rem;
  }
  
}
</style>
</head>
<body>
<section class="content-main">
  <!-- Minimal Header -->
  <div class="dashboard-header">
      <h2 class="dashboard-title">Categories</h2>
      <p class="dashboard-subtitle">Manage your product categories</p>
  </div>

  <!-- Clean Search Bar -->
  <div class="search-box">
      <form action="/admin/category/" method="get">
          <div class="search-group">
              <i class="ri-search-line search-icon"></i>
              <input 
                  type="text" 
                  class="search-input" 
                  placeholder="Search categories..." 
                  name="search"
                  required 
              />
              <button type="submit" class="search-button">Search</button>
          </div>
      </form>
  </div>

  <!-- Modern Data Table -->
  <div class="data-table-container">
      <div class="table-wrapper">
          <table class="data-table">
              <thead>
                  <tr>
                      <th width="5%">#</th>
                      <th width="20%">Name</th>
                      <th width="25%">Description</th>
                      <th width="10%">Offer</th>
                      <th width="15%">Status</th>
                      <th width="25%">Actions</th>
                  </tr>
              </thead>
              <tbody>
                  <% cat.reverse().forEach((category, index)=> { %>
                      <tr>
                          <td class="text-center"><%= index + 1 %></td>
                          <td>
                              <div class="category-name"><%= category.name %></div>
                          </td>
                          <td>
                              <div class="category-description"><%= category.description %></div>
                          </td>
                          <td>
                              <div class="offer-badge <%= category.categoryOffer ? 'active' : '' %>">
                                  <%= category.categoryOffer ? category.categoryOffer : '0%' %>
                              </div>
                          </td>
                          <td>
                              <div class="status-badge <%= category.isListed ? 'active' : 'inactive' %>">
                                  <%= category.isListed ? 'Active' : 'Inactive' %>
                              </div>
                          </td>
                          <td>
                              <div class="action-buttons">
                                  <% if(category.categoryOffer == 0) { %>
                                      <button onclick="addOffer('<%=category._id%>')" class="btn-action btn-offer">Offer
                                          <i class="ri-price-tag-3-line"></i>
                                      </button>
                                  <% } else { %>
                                      <button onclick="removeOffer('<%=category._id%>')" class="btn-action btn-remove">
                                          <i class="ri-close-circle-line"></i>
                                      </button>
                                  <% } %>
                                  
                                  <a href="/admin/editCategory?id=<%= category._id %>" class="btn-action btn-edit">Edit
                                      <i class="ri-edit-line"></i>
                                  </a>

                                  <% if (category.isListed) { %>
                                      <a href="/admin/unlistCategory?id=<%= category._id %>" class="btn-action btn-unlist">Unlist
                                          <i class="ri-eye-off-line"></i>
                                      </a>
                                  <% } else { %>
                                      <a href="/admin/listCategory?id=<%= category._id %>" class="btn-action btn-list">List
                                          <i class="ri-eye-line"></i>
                                      </a>
                                  <% } %>
                              </div>
                          </td>
                      </tr>
                  <% }) %>
              </tbody>
          </table>
      </div>
  </div>

  <!-- Minimal Pagination -->
  <div class="pagination">
      <div class="pagination-container">
          <% if (currentPage > 1) { %>
              <a href="?page=<%= currentPage - 1 %>" class="page-btn">
                  <i class="ri-arrow-left-s-line"></i>
              </a>
          <% } %>

          <div class="page-numbers">
              <% for (let i=1; i <=totalPages; i++) { %>
                  <a href="?page=<%= i %>" class="page-btn <%= i === currentPage ? 'active' : '' %>">
                      <%= i %>
                  </a>
              <% } %>
          </div>

          <% if (currentPage < totalPages) { %>
              <a href="?page=<%= currentPage + 1 %>" class="page-btn">
                  <i class="ri-arrow-right-s-line"></i>
              </a>
          <% } %>
      </div>
  </div>
</section>
        
      </form>
    </header>
    <div class="card">
      <div class="card-body">
        <div class="row">
          <div class="col-md-4">
            <form method="post" action="/admin/addCategory" onsubmit="return handleFormSubmit(event)">
              <div class="mb-4">
                <h4>Add Category</h4>
                <label for="product_name" class="form-label">Name</label>
                <input type="text" name="name" placeholder="Type here" class="form-control" id="product_name" />
                <div id="name-error" class="error-message"></div>
              </div>
              <div class="mb-4">
                <label class="form-label">Description</label>
                <textarea placeholder="Type here" name="description" class="form-control" id="descriptionId" ></textarea>
                <div id="description-error" class="error-message"></div>
              </div>
              <div class="d-grid">
                <button class="btn btn-primary" type="submit">
                  Create category
                </button>
              </div>
            </form>
          </div>
          

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

  <script>
  function handleFormSubmit(event) {
    event.preventDefault();

    if (!validateForm()) {
        return false;
    }

    const name = document.getElementsByName("name")[0].value.trim();
    const description = document.getElementById("descriptionId").value.trim();

    // Show loading state
    Swal.fire({
        title: 'Adding Category...',
        didOpen: () => {
            Swal.showLoading();
        },
        allowOutsideClick: false
    });

    fetch("/admin/addCategory", {
        method: "POST",
        headers: {
            "Content-Type": "application/json",
        },
        body: JSON.stringify({
            name,
            description,
        }),
    })
    .then(response => response.json())
    .then(data => {
        if (data.message === "category already exists") {
            Swal.fire({
                icon: "warning",
                title: "Category Exists",
                text: "This category name is already in use",
                showConfirmButton: true,
                confirmButtonColor: '#3085d6',
            });
            return;
        }
        
        if (!data.status) {
            throw new Error(data.message || "Failed to add category");
        }

        // Success case
        Swal.fire({
            icon: "success",
            title: "Success",
            text: "Category added successfully!",
            showConfirmButton: false,
            timer: 1500
        }).then(() => {
            window.location.reload();
        });
    })
    .catch(error => {
        Swal.fire({
            icon: "error",
            title: "Error",
            text: error.message || "Something went wrong!",
            showConfirmButton: true,
            confirmButtonColor: '#3085d6',
        });
    });

    return false;
}

function validateForm() {
    clearErrorMessages();

    const name = document.getElementsByName("name")[0].value.trim();
    const description = document.getElementById("descriptionId").value.trim();
    let isValid = true;

    if (name === "") {
        displayErrorMessage("name-error", "Name is required");
        isValid = false;
    } else if (!/^[a-zA-Z0-9 ]+$/.test(name)) {
        displayErrorMessage("name-error", "Category name should contain only alphabets and numbers");
        isValid = false;
    }

    if (description === "") {
        displayErrorMessage("description-error", "Description is required");
        isValid = false;
    }

    return isValid;
}

function displayErrorMessage(elementId, message) {
    const errorElement = document.getElementById(elementId);
    if (errorElement) {
        errorElement.innerText = message;
        errorElement.style.display = "block";
    }
}

function clearErrorMessages() {
    const errorElements = document.querySelectorAll(".error-message");
    errorElements.forEach((element) => {
        element.innerText = "";
        element.style.display = "none";
    });
}

    async function addOffer(categoryId) {
  const { value: amount } = await Swal.fire({
    title: "Offer in percentage",
    input: "number",
    inputLabel: "percentage",
    inputPlaceholder: "%",
    inputValidator: (value) => {
      if (!value || value <= 0 || value > 100) {
        return "Please enter a valid percentage between 1 and 100";
      }
    }
  });

  if (amount) {
    try {
      const response = await fetch("/admin/addCategoryOffer", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          percentage: amount,
          categoryId: categoryId,
        }),
      });

      const data = await response.json();

      if (response.ok && data.status === true) {
        Swal.fire({
          icon: "success",
          title: "Success",
          text: "Offer added successfully",
        }).then(() => {
          location.reload();
        });
      } else {
        Swal.fire({
          icon: "error",
          title: "Oops",
          text: data.message || "Failed to add an offer",
        });
      }
    } catch (error) {
      Swal.fire({
        icon: "error",
        title: "Oops",
        text: "An error occurred while adding the offer",
      });
      console.error("Error adding offer:", error);
    }
  }
}

    async function removeOffer(categoryId) {
      try {
        const response = await fetch("/admin/removeCategoryOffer", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            categoryId: categoryId,
          })
        });
        const data = await response.json();
        if (response.ok && data.status === true) {
          Swal.fire({
            icon: "success",
            title: "Success",
            text: "Offer removed successfully",
          }).then(() => {
            location.reload();
          });
        } else {
          Swal.fire("Failed", data.message || "Removing offer failed", "error");
        }
      } catch (error) {
        Swal.fire({
          icon: "error",
          title: "Oops",
          text: "An error occurred while removing the offer",
        });
        console.log("Error removing offer", error);
      }
    }


    
  </script>
  <%- include("../../views/partials/admin/footer") %>
</body>