<%- include("../../views/partials/admin/header") %>

<style>
    .sidebar {
            width: 260px;
            height: 100vh;
            position: fixed;
            background: #ffffff;
            border-right: 1px solid #e5e5e5;
            transition: width 0.3s ease;
        }

        .sidebar:hover {
            width: 280px;
        }

        .brand {
            padding: 2rem;
            border-bottom: 1px solid #e5e5e5;
        }

        .brand-title {
            font-size: 1.5rem;
            font-weight: 200;
            letter-spacing: 0.2em;
            color: #000000;
            text-decoration: none;
        }

        .nav-menu {
            padding: 1rem;
        }

        .nav-item {
            list-style: none;
            margin: 0.5rem 0;
        }
      

        .nav-link {
            display: flex;
            align-items: center;
            padding: 1rem;
            color: #000000;
            text-decoration: none;
            border-radius: 0.5rem;
            transition: all 0.3s ease;
        }

        .nav-link:hover {
            background-color: #000000;
            color: #ffffff;
        }

        .nav-link i {
            width: 1.5rem;
            margin-right: 1rem;
        }

        .nav-link.active {
            background-color: #000000;
            color: #ffffff;
        }
    .orders-container {
        background-color: #ffffff;
        padding: 2rem;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }
    .header-filter-section {
        background: white;
        padding: 20px;
        border-radius: 12px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        margin-bottom: 20px;
    }

    .filter-content {
        display: flex;
        align-items: center;
        gap: 16px;
        margin-top: 16px;
    }

    .filter-header {
        display: flex;
        align-items: center;
        padding: 8px 16px;
        background: #f8f9fa;
        border-radius: 8px;
        border: 1px solid #e9ecef;
    }

    .filter-icon {
        color: #000;
        margin-right: 8px;
        font-size: 14px;
    }

    .filter-label {
        font-size: 14px;
        font-weight: 500;
        color: #495057;
        margin: 0;
    }

    .status-select-container {
        position: relative;
        flex: 1;
        max-width: 300px;
    }

    #statusFilter {
        width: 100%;
        padding: 8px 32px 8px 16px;
        border: 1px solid #e9ecef;
        border-radius: 8px;
        background: #f8f9fa;
        font-size: 14px;
        color: #495057;
        appearance: none;
        cursor: pointer;
        transition: all 0.2s ease;
    }

    #statusFilter:hover {
        border-color: #000;
        background: white;
    }

    #statusFilter:focus {
        outline: none;
        border-color: #000;
        background: white;
        box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.1);
    }

    .status-select-container::after {
        content: '⌄';
        position: absolute;
        right: 12px;
        top: 50%;
        transform: translateY(-50%);
        font-size: 18px;
        color: #6c757d;
        pointer-events: none;
    }

    .filter-stats {
        display: flex;
        gap: 12px;
    }

    .stats-item {
        padding: 8px 16px;
        background: #f8f9fa;
        border: 1px solid #e9ecef;
        border-radius: 8px;
        min-width: 100px;
        text-align: center;
    }

    .stats-number {
        font-weight: 600;
        font-size: 16px;
        color: #000;
        line-height: 1;
    }

    .stats-label {
        color: #6c757d;
        font-size: 12px;
        margin-top: 4px;
    }

    .page-title {
        font-size: 24px;
        font-weight: 600;
        color: #212529;
        margin: 0;
    }
    .table-container {
        background-color: #ffffff;
        border-radius: 10px;
        border: 1px solid #e5e5e5;
    }
    .table {
        margin-bottom: 0;
        width: 100%;
        background-color: #ffffff;
    }
    .table thead {
        background-color: #ffffff;
        border-bottom: 1px solid #e5e5e5;
    }
    .table th {
        color: #000000;
        font-weight: 600;
        padding: 1rem;
        border: none;
        font-size: 0.95rem;
    }
    .table td {
        color: #000000;
        padding: 1rem;
        vertical-align: middle;
        border-top: 1px solid #e5e5e5;
    }
    .table tbody tr:hover {
        background-color: #f8f8f8;
    }
    .status-select {
        padding: 0.5rem;
        border: 1px solid #e5e5e5;
        border-radius: 6px;
        background-color: #ffffff;
        color: #000000;
        font-size: 0.9rem;
        width: 140px;
        cursor: pointer;
    }
    .status-select:focus {
        outline: none;
        border-color: #000000;
    }
    .order-id {
        font-weight: 600;
        color: #000000;
    }
    .order-date {
        color: #000000;
    }
    .order-amount {
        font-weight: 600;
        color: #000000;
    }
    .view-details {
    text-decoration: none;
    color: #000000;
    padding: 0.3rem 0.8rem;
    border: 1px solid #000000;
    border-radius: 6px;
    transition: all 0.3s ease;
    display: inline-block;
    font-size: 0.8rem;
    background-color: #ffffff;
    cursor: pointer; 
    }
    .view-details:hover {
        background-color: #000000;
        color: #ffffff;
    }
    .header-section {
        margin-bottom: 2rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid #e5e5e5;
    }
</style>


<div class="container-fluid">
    <div class="row">
        <main class="col-md-12 px-md-4">
            <div class="orders-container mt-4">
                <div class="header-filter-section">
                    <h1 class="page-title">Order Management</h1>
                    <div class="filter-content">
                        <div class="filter-header">
                            <i class="fas fa-filter filter-icon"></i>
                            <span class="filter-label">Filter by Status</span>
                        </div>
                        <div class="status-select-container">
                            <select id="statusFilter">
                                <option value="all">All Orders</option>
                                <option value="Pending">Pending</option>
                                <option value="Processing">Processing</option>
                                <option value="Shipped">Shipped</option>
                                <option value="Delivered">Delivered</option>
                                <option value="Cancelled">Cancelled</option>
                                <option value="Return Request">Return Request</option>
                                <option value="Returned">Returned</option>
                            </select>
                        </div>
                        <div class="filter-stats">
                            <div class="stats-item">
                                <div class="stats-number" id="totalOrders">0</div>
                                <div class="stats-label">Total</div>
                            </div>
                            <div class="stats-item">
                                <div class="stats-number" id="filteredOrders">0</div>
                                <div class="stats-label">Filtered</div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="table-container">
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Order ID</th>
                                    <th>Customer</th>
                                    <th>Date</th>
                                    <th>Amount</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% orders.forEach(order => { %>
                                    <tr>
                                        <td><span class="order-id">#<%= order._id.toString().slice(-6).toUpperCase() %></span></td>
                                        <td><%= order.user ? order.user.name : 'User not found' %></td>
                                        <td class="order-date">
                                            <%= order.orderDate ? new Date(order.orderDate).toLocaleDateString('en-IN', { 
                                                year: 'numeric', 
                                                month: 'short', 
                                                day: 'numeric',
                                                hour: '2-digit',
                                                minute: '2-digit'
                                            }) : 'Date not available' %>
                                        </td>
                                        <td class="order-amount">₹<%= order.totalAmount ? order.totalAmount.toFixed(2) : '0.00' %></td>
                                        <td>
                                            <select class="status-select" data-order-id="<%= order._id %>">
                                                <option value="Pending" <%= order.status === 'Pending' ? 'selected' : '' %>>Pending</option>
                                                <option value="Processing" <%= order.status === 'Processing' ? 'selected' : '' %>>Processing</option>
                                                <option value="Shipped" <%= order.status === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                                                <option value="Delivered" <%= order.status === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                                                <option value="Cancelled" <%= order.status === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
                                                <option value="Return Requested" <%= order.status === 'Return Requested' ? 'selected' : '' %>>Return Requested</option>
                                                <option value="Returned" <%= order.status === 'Returned' ? 'selected' : '' %>>Returned</option>
                                            </select>
                                        </td>
                                        <td>
                                            <a href="/admin/orders/<%= order._id %>" class="view-details">View Details</a>
                                        </td>
                                    </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </main>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
document.addEventListener('DOMContentLoaded', function () {
    // Define the valid status order
    const statusOrder = ["Pending", "Processing", "Shipped", "Delivered", "Cancelled", "Return Request", "Returned"];

    // Status filter functionality
    const statusFilter = document.getElementById('statusFilter');
    const orderRows = document.querySelectorAll('table tbody tr');
    const totalOrdersElement = document.getElementById('totalOrders');
    const filteredOrdersElement = document.getElementById('filteredOrders');

    // Update initial counts
    totalOrdersElement.textContent = orderRows.length;
    filteredOrdersElement.textContent = orderRows.length;

    statusFilter.addEventListener('change', function() {
        const selectedStatus = this.value;
        let visibleCount = 0;
        
        orderRows.forEach(row => {
            const statusCell = row.querySelector('td:nth-child(5)'); // Adjust index based on status column
            const rowStatus = statusCell.querySelector('select').value;
            
            if (selectedStatus === 'all' || rowStatus === selectedStatus) {
                row.style.display = '';
                visibleCount++;
            } else {
                row.style.display = 'none';
            }
        });

        // Update the counters
        filteredOrdersElement.textContent = visibleCount;
    });

    // Existing status dropdown functionality
    document.querySelectorAll('.status-select').forEach(select => {
        let currentStatus = select.value; // Track the initial/current status

        // Disable dropdown if the status is final
        if (["Delivered", "Cancelled", "Returned"].includes(currentStatus)) {
            select.disabled = true;
            return;
        }

        select.addEventListener('change', async function () {
            const orderId = this.dataset.orderId; // Order ID from data attribute
            const newStatus = this.value;

           

            // Check if the new status is a valid forward transition
            if (statusOrder.indexOf(newStatus) < statusOrder.indexOf(currentStatus)) {
                Swal.fire({
                    title: 'Invalid Transition',
                    text: 'You cannot revert to a previous status.',
                    icon: 'warning',
                    confirmButtonText: 'OK',
                });
                this.value = currentStatus; // Revert to the current status
                return;
            }

            try {
                // Send the update request to the server
                const response = await fetch('/admin/orders/update-status', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ orderId, status: newStatus }),
                });

                const data = await response.json();

                if (data.success) {
                    Swal.fire({
                        title: 'Success!',
                        text: 'Status updated successfully.',
                        icon: 'success',
                        confirmButtonText: 'OK',
                    });
                    currentStatus = newStatus; // Update the current status on success
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: 'Failed to update status: ' + data.message,
                        icon: 'error',
                        confirmButtonText: 'OK',
                    });
                    this.value = currentStatus; // Revert to the current status
                }
            } catch (error) {
                console.error('Error updating status:', error);
                Swal.fire({
                    title: 'Error!',
                    text: 'Failed to update status. Please try again later.',
                    icon: 'error',
                    confirmButtonText: 'OK',
                });
                this.value = currentStatus; // Revert to the current status
            }
        });
    });
});

</script>

<%- include("../../views/partials/admin/footer") %>
