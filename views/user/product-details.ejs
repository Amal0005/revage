<%- include("../../views/partials/user/header") %>

 <style>
        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            color: #333;
            margin: 0;
            padding: 0;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .product-detail {
            margin-top: 15px;
            display: flex;
            flex-wrap: wrap;
            gap: 40px;
        }

        .product-gallery {
            flex: 1;
            min-width: 300px;
        }

        .main-image-container {
    position: relative;
    width: 75%;
    max-width: 600px;
}

.main-image {
    width: 100%;
    height: auto;
    display: block;
    cursor: zoom-in;
    border-radius: 8px;
}

#zoomLens {
    position: absolute;
    border: 2px solid #999;
    background-color: rgba(255, 255, 255, 0.3);
    cursor: zoom-in;
    width: 100px;
    height: 100px;
    visibility: hidden;
    pointer-events: none;
}

#zoomResult {
    position: absolute;
    top: 0;
    left: 155%;
    width: 100px;
    height: 100px;
    border: 1px solid #ddd;
    background-repeat: no-repeat;
    display: none;
    z-index: 999;
}

@media (max-width: 768px) {
    #zoomResult {
        display: none !important;
    }
}

        .thumbnails {
            margin-left: 205px;
            margin-top: -56px;
            display: flex;
            gap: 10px;
            overflow-x: auto;
        }

        .thumbnail {
            width: 60px;
            height: 60px;
            object-fit: cover;
            border-radius: 4px;
            cursor: pointer;
            opacity: 0.6;
            transition: opacity 0.3s ease;
        }

        .thumbnail.active, .thumbnail:hover {
            opacity: 1;
        }

        .product-info {
            flex: 1;
            min-width: 300px;
        }

        .product-name {
            font-size: 2rem;
            margin-bottom: 10px;
        }

        .product-rating {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }

        .stars {
            color: #ffc107;
            margin-right: 5px;
        }

        .review-count {
            color: #666;
            font-size: 0.9rem;
        }

        .product-price {
            margin-bottom: 20px;
        }

        .sale-price {
            font-size: 1.5rem;
            font-weight: bold;
            color: #e53935;
            margin-right: 10px;
        }

        .regular-price {
            text-decoration: line-through;
            color: #666;
        }

        .product-description {
            margin-bottom: 20px;
        }

        .add-to-cart {
            display: flex;
            gap: 20px;
            margin-bottom: 20px;
        }

        .quantity-selector {
            display: flex;
            align-items: center;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .quantity-selector button {
            background: none;
            border: none;
            padding: 10px 15px;
            cursor: pointer;
            font-size: 1.2rem;
        }

        .quantity-selector span {
            padding: 0 15px;
        }

        .add-to-cart-btn {
            flex-grow: 1;
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .add-to-cart-btn:hover {
            background-color: #45a049;
        }

        .additional-info ul {
            list-style-type: none;
            padding: 0;
        }

        .additional-info li {
            margin-bottom: 10px;
        }

        .product-tabs {
            margin-top: 40px;
        }

        .tab-header {
            display: flex;
            border-bottom: 2px solid #ddd;
        }

        .tab-btn {
            background: none;
            border: none;
            padding: 10px 20px;
            cursor: pointer;
            font-size: 1rem;
            transition: background-color 0.3s ease;
        }

        .tab-btn.active {
            border-bottom: 2px solid #4CAF50;
        }

        .tab-content {
            display: none;
            padding: 20px 0;
        }

        .tab-content.active {
            display: block;
        }

        @media (max-width: 768px) {
            .product-detail {
                flex-direction: column;
            }
            
            #zoomResult {
                display: none !important;
            }
        }
    </style>
</head>
<body>
    <main class="container">
        
                <div class="product-detail">
                    <!-- Product Gallery -->
                    <div class="product-gallery">
                        <div class="main-image-container">
                            <img src="/uploads/product-images/<%= product.productImage[0] %>" 
                                 alt="<%= product.productName %>" 
                                 id="mainImage" 
                                 class="main-image">
                            <div id="zoomLens"></div>
                            <div id="zoomResult"></div>
                        </div>
                        
                        
                    </div>

            <!-- Product Info -->
            <div class="product-info">
                <h1 class="product-name"><%= product.productName %></h1>
                <div class="product-rating">
                    <div class="stars">
                        <% for(let i = 0; i < 5; i++) { %>
                            <span class="star">★</span>
                        <% } %>
                    </div>
                    <span class="review-count">(25 reviews)</span>
                </div>
                <div class="product-price">
                    <span class="sale-price">₹<%= product.salePrice %></span>
                    <span class="regular-price">₹<%= product.regularPrice %></span>
                    <div class="thumbnails">
                        <% product.productImage.forEach((image, index) => { %>
                            <img src="/uploads/product-images/<%= image %>" 
                                 alt="<%= product.productName %> - <%= index + 1 %>" 
                                 class="thumbnail <%= index === 0 ? 'active' : '' %>" 
                                 onclick="changeMainImage('/uploads/product-images/<%= image %>')">
                        <% }); %>
                    </div>
                </div>
                <p class="product-description"><%= product.description %></p>

                <div class="add-to-cart">
                    <div class="quantity-selector">
                        <button onclick="changeQuantity(-1)">-</button>
                        <span id="quantity">1</span>
                        <button onclick="changeQuantity(1)">+</button>
                    </div>
                    <button class="add-to-cart-btn" onclick="addToCart('<%=product._id%>')">Add to Cart</button>
                </div>

                <div class="additional-info">
                    <ul>
                        <li><i class="icon-truck"></i> Free shipping on orders over ₹500</li>
                        <li><i class="icon-rotate-ccw"></i> 30-day return policy</li>
                        <li><i class="icon-credit-card"></i> Secure payments</li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Tabs -->
        <div class="product-tabs">
            <div class="tab-header">
                <button class="tab-btn active" onclick="openTab(event, 'description')">Description</button>
                <button class="tab-btn" onclick="openTab(event, 'specifications')">Specifications</button>
                <button class="tab-btn" onclick="openTab(event, 'reviews')">Reviews</button>
            </div>
            <div id="description" class="tab-content active">
                <p><%= product.description %></p>
            </div>
            <div id="specifications" class="tab-content">
                <table>
                    <tr>
                        <td>Brand</td>
                        <td><%= product.brand %></td>
                    </tr>
                    <tr>
                        <td>Model</td>
                        <td><%= product.model %></td>
                    </tr>
                </table>
            </div>
            <div id="reviews" class="tab-content">
                <p>Customer reviews will be displayed here.</p>
            </div>
        </div>
    </main>

    <script>
        async function addToCart(productId) {
            
    try {
        const response = await fetch('/cart/add', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ 
                productId: productId,
                quantity: 1,
            }),
        });

        const data = await response.json();
        
        if (response.ok) {
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: 'Product added to cart successfully!',
                showConfirmButton: false,
                timer: 1500
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: data.message || 'Failed to add product to cart'
            });
        }
    } catch (error) {
        console.error('Error adding to cart:', error);
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Failed to add product to cart'
        });
    }
}
        // Get required elements
        const mainImage = document.getElementById("mainImage");
        const mainImageContainer = document.querySelector(".main-image-container");
        const zoomLens = document.getElementById("zoomLens");
        const zoomResult = document.getElementById("zoomResult");

        // Calculate zoom ratio based on image and result sizes
        function getZoomRatio() {
            const resultWidth = zoomResult.offsetWidth;
            const imageWidth = mainImage.offsetWidth;
            return resultWidth / zoomLens.offsetWidth;
        }

        // Update zoom result dimensions
        function updateZoomResultSize() {
            const rect = mainImage.getBoundingClientRect();
            zoomResult.style.width = `${rect.width}px`;
            zoomResult.style.height = `${rect.height}px`;
        }

        // Calculate cursor position relative to image
        function getCursorPosition(event) {
            const rect = mainImage.getBoundingClientRect();
            const x = event.clientX - rect.left;
            const y = event.clientY - rect.top;
            return { x, y };
        }

        // Move lens and update zoom result
        function moveLens(event) {
            event.preventDefault();
            
            const pos = getCursorPosition(event);
            const rect = mainImage.getBoundingClientRect();
            
            // Calculate lens position
            let x = pos.x - (zoomLens.offsetWidth / 2);
            let y = pos.y - (zoomLens.offsetHeight / 2);
            
            // Prevent lens from going outside image bounds
            x = Math.min(Math.max(0, x), rect.width - zoomLens.offsetWidth);
            y = Math.min(Math.max(0, y), rect.height - zoomLens.offsetHeight);
            
            // Update lens position
            zoomLens.style.left = `${x}px`;
            zoomLens.style.top = `${y}px`;
            
            // Calculate and update zoom result
            const ratio = getZoomRatio();
            const bgPosX = x * ratio;
            const bgPosY = y * ratio;
            
            zoomResult.style.backgroundImage = `url(${mainImage.src})`;
            zoomResult.style.backgroundSize = `${rect.width * ratio}px ${rect.height * ratio}px`;
            zoomResult.style.backgroundPosition = `-${bgPosX}px -${bgPosY}px`;
        }

        // Initialize zoom functionality
        function initZoom() {
            // Set initial lens size
            zoomLens.style.width = '100px';
            zoomLens.style.height = '100px';
            
            // Update result size
            updateZoomResultSize();
            
            // Add event listeners
            mainImage.addEventListener("mouseenter", function() {
                zoomLens.style.visibility = "visible";
                zoomResult.style.display = "block";
                zoomResult.style.backgroundImage = `url(${mainImage.src})`;
            });
            
            mainImage.addEventListener("mouseleave", function() {
                zoomLens.style.visibility = "hidden";
                zoomResult.style.display = "none";
            });
            
            mainImage.addEventListener("mousemove", moveLens);
        }

        // Initialize on page load and window resize
        window.addEventListener("load", initZoom);
        window.addEventListener("resize", updateZoomResultSize);

        // Change main image function
        function changeMainImage(src) {
            document.getElementById('mainImage').src = src;
            document.querySelectorAll('.thumbnail').forEach(thumb => {
                thumb.classList.remove('active');
                if (thumb.src === src) {
                    thumb.classList.add('active');
                }
            });
            // Reset zoom result background
            zoomResult.style.backgroundImage = `url(${src})`;
        }

        // Quantity selector function
        function changeQuantity(change) {
            let quantityElem = document.getElementById('quantity');
            let newQuantity = parseInt(quantityElem.innerText) + change;
            if (newQuantity >= 1) {
                quantityElem.innerText = newQuantity;
            }
        }

        // Tab functionality
        function openTab(evt, tabName) {
            let tabContents = document.getElementsByClassName("tab-content");
            for (let i = 0; i < tabContents.length; i++) {
                tabContents[i].classList.remove("active");
            }
            let tabButtons = document.getElementsByClassName("tab-btn");
            for (let i = 0; i < tabButtons.length; i++) {
                tabButtons[i].classList.remove("active");
            }
            document.getElementById(tabName).classList.add("active");
            evt.currentTarget.classList.add("active");
        }
        
    </script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

</body>
</html>
<%- include("../../views/partials/user/footer") %>

