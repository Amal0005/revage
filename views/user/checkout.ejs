<%- include("../../views/partials/user/header") %>

<style>
    .checkout-container {
        max-width: 1200px;
        margin: 40px auto;
        padding: 20px;
        display: grid;
        grid-template-columns: 2fr 1fr;
        gap: 30px;
    }

    .addresses-section {
        background: #fff;
        padding: 25px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .order-summary {
        background: #fff;
        padding: 25px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        height: fit-content;
    }

    .address-card {
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 15px;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .address-card:hover {
        border-color: #1e918b;
        box-shadow: 0 2px 8px rgba(30,145,139,0.1);
    }

    .address-card.selected {
        border: 2px solid #1e918b;
        background-color: #f8ffff;
    }

    .address-details {
        margin: 10px 0;
    }

    .add-address-btn {
        width: 100%;
        padding: 12px;
        background-color: #fff;
        color: #1e918b;
        border: 2px dashed #1e918b;
        border-radius: 8px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s;
        margin-bottom: 20px;
    }

    .add-address-btn:hover {
        background-color: #f8ffff;
    }

    .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.5);
        z-index: 1000;
    }

    .modal-content {
        position: relative;
        background-color: #fff;
        margin: 10% auto;
        padding: 20px;
        width: 90%;
        max-width: 500px;
        border-radius: 8px;
    }

    .close-modal {
        position: absolute;
        right: 20px;
        top: 20px;
        font-size: 24px;
        cursor: pointer;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-group label {
        display: block;
        margin-bottom: 8px;
        font-weight: 500;
    }

    .form-group input {
        width: 100%;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 14px;
    }

    .cart-items {
        margin: 20px 0;
    }

    .cart-item {
        display: flex;
        align-items: center;
        padding: 10px 0;
        border-bottom: 1px solid #eee;
    }

    .cart-item img {
        width: 60px;
        height: 60px;
        object-fit: cover;
        margin-right: 15px;
        border-radius: 4px;
    }

    .item-details {
        flex-grow: 1;
    }

    .item-price {
        font-weight: bold;
        color: #1e918b;
    }

    .order-total {
        margin-top: 20px;
        padding-top: 20px;
        border-top: 2px solid #eee;
    }

    .total-row {
        display: flex;
        justify-content: space-between;
        margin-bottom: 10px;
    }

    .checkout-btn {
        width: 100%;
        padding: 15px;
        background-color: #1e918b;
        color: white;
        border: none;
        border-radius: 4px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: background-color 0.3s;
        margin-top: 20px;
    }

    .checkout-btn:hover {
        background-color: #167571;
    }

    .checkout-btn:disabled {
        background-color: #ccc;
        cursor: not-allowed;
    }

    .section-title {
        margin-bottom: 20px;
        color: #333;
        font-size: 1.5rem;
    }

    @media (max-width: 768px) {
        .checkout-container {
            grid-template-columns: 1fr;
        }
    }
</style>

<div class="checkout-container">
    <div class="addresses-section">
        <h2 class="section-title">Select Delivery Address</h2>
        <button class="add-address-btn" onclick="showAddAddressModal()">
            <i class="fas fa-plus"></i> Add New Address
        </button>
        
        <div id="addresses-container">
            <% if (user.addresses && user.addresses.length > 0) { %>
                <% user.addresses.forEach((address, index) => { %>
                    <div class="address-card" onclick="selectAddress('<%= index %>')" id="address-<%= index %>">
                        <h4><%= address.fullName %></h4>
                        <div class="address-details">
                            <p><%= address.address %></p>
                            <p><%= address.city %> - <%= address.pincode %></p>
                            <p>Phone: <%= address.phone %></p>
                        </div>
                    </div>
                <% }) %>
            <% } else { %>
                <p>No saved addresses found. Please add a new address.</p>
            <% } %>
        </div>
    </div>

    <div class="order-summary">
        <h2 class="section-title">Order Summary</h2>
        <div class="cart-items">
            <% if (cart && cart.items) { %>
                <% cart.items.forEach(item => { %>
                    <div class="cart-item">
                        <img src="/uploads/product-images/<%= item.product.productImage[0] %>" alt="<%= item.product.productName %>">
                        <div class="item-details">
                            <h4><%= item.product.productName %></h4>
                            <p>Quantity: <%= item.quantity %></p>
                            <p class="item-price">₹<%= (item.product.salePrice * item.quantity).toLocaleString('en-IN') %></p>
                        </div>
                    </div>
                <% }) %>
            <% } %>
        </div>

        <div class="order-total">
            <div class="total-row">
                <span>Subtotal:</span>
                <span>₹<%= cart.subtotal.toLocaleString('en-IN') %></span>
            </div>
            <div class="total-row">
                <span>Shipping:</span>
                <span>₹<%= cart.shipping.toLocaleString('en-IN') %></span>
            </div>
            <div class="total-row" style="font-weight: bold; font-size: 1.2em;">
                <span>Total:</span>
                <span>₹<%= cart.total.toLocaleString('en-IN') %></span>
            </div>
        </div>

        <button class="checkout-btn" id="place-order-btn" onclick="processCheckout()" disabled>Place Order</button>
    </div>
</div>

<!-- Add Address Modal -->
<div id="add-address-modal" class="modal">
    <div class="modal-content">
        <span class="close-modal" onclick="hideAddAddressModal()">&times;</span>
        <h2>Add New Address</h2>
        <form id="add-address-form" novalidate>
            <div class="form-group">
                <label for="fullName">Full Name</label>
                <input type="text" id="fullName" name="name" pattern="^[a-zA-Z\s]{3,50}$" required>
                <div class="invalid-feedback">Please enter a valid name (3-50 characters)</div>
            </div>
            <div class="form-group">
                <label for="houseName">House Name/Number</label>
                <input type="text" id="houseName" name="houseName" required>
                <div class="invalid-feedback">Please enter house name/number</div>
            </div>
            <div class="form-group">
                <label for="street">Street</label>
                <input type="text" id="street" name="street" required>
                <div class="invalid-feedback">Please enter street name</div>
            </div>
            <div class="form-group">
                <label for="city">City</label>
                <input type="text" id="city" name="city" required>
                <div class="invalid-feedback">Please enter city name</div>
            </div>
            <div class="form-group">
                <label for="state">State</label>
                <select class="form-control" id="state" name="state" required>
                    <option value="">Select State</option>
                    <option value="Andhra Pradesh">Andhra Pradesh</option>
                    <option value="Arunachal Pradesh">Arunachal Pradesh</option>
                    <option value="Assam">Assam</option>
                    <option value="Bihar">Bihar</option>
                    <option value="Chhattisgarh">Chhattisgarh</option>
                    <option value="Goa">Goa</option>
                    <option value="Gujarat">Gujarat</option>
                    <option value="Haryana">Haryana</option>
                    <option value="Himachal Pradesh">Himachal Pradesh</option>
                    <option value="Jharkhand">Jharkhand</option>
                    <option value="Karnataka">Karnataka</option>
                    <option value="Kerala">Kerala</option>
                    <option value="Madhya Pradesh">Madhya Pradesh</option>
                    <option value="Maharashtra">Maharashtra</option>
                    <option value="Manipur">Manipur</option>
                    <option value="Meghalaya">Meghalaya</option>
                    <option value="Mizoram">Mizoram</option>
                    <option value="Nagaland">Nagaland</option>
                    <option value="Odisha">Odisha</option>
                    <option value="Punjab">Punjab</option>
                    <option value="Rajasthan">Rajasthan</option>
                    <option value="Sikkim">Sikkim</option>
                    <option value="Tamil Nadu">Tamil Nadu</option>
                    <option value="Telangana">Telangana</option>
                    <option value="Tripura">Tripura</option>
                    <option value="Uttar Pradesh">Uttar Pradesh</option>
                    <option value="Uttarakhand">Uttarakhand</option>
                    <option value="West Bengal">West Bengal</option>
                </select>
                <div class="invalid-feedback">Please select a state</div>
            </div>
            <div class="form-group">
                <label for="pincode">PIN Code</label>
                <input type="text" id="pincode" name="pincode" pattern="^[1-9][0-9]{5}$" maxlength="6" required>
                <div class="invalid-feedback">Please enter a valid 6-digit PIN code</div>
            </div>
            <div class="form-group">
                <label for="phone">Phone Number</label>
                <div class="input-group">
                    <span class="input-group-text">+91</span>
                    <input type="tel" id="phone" name="phone" pattern="^[6-9][0-9]{9}$" maxlength="10" required>
                </div>
                <div class="invalid-feedback">Please enter a valid 10-digit mobile number</div>
            </div>
            <button type="submit" class="checkout-btn">Save Address</button>
        </form>
    </div>
</div>

<script>
let selectedAddressIndex = null;

function selectAddress(index) {
    // Remove selected class from all addresses
    document.querySelectorAll('.address-card').forEach(card => {
        card.classList.remove('selected');
    });
    
    // Add selected class to clicked address
    const selectedCard = document.getElementById(`address-${index}`);
    selectedCard.classList.add('selected');
    
    // Enable place order button
    document.getElementById('place-order-btn').disabled = false;
    
    // Store selected address index
    selectedAddressIndex = index;
}

function showAddAddressModal() {
    document.getElementById('add-address-modal').style.display = 'block';
}

function hideAddAddressModal() {
    document.getElementById('add-address-modal').style.display = 'none';
    // Reset form
    document.getElementById('add-address-form').reset();
}

// Close modal when clicking outside
window.onclick = function(event) {
    const modal = document.getElementById('add-address-modal');
    if (event.target == modal) {
        hideAddAddressModal();
    }
}

function validateAddressForm() {
    const form = document.getElementById('add-address-form');
    const name = document.getElementById('fullName').value.trim();
    const houseName = document.getElementById('houseName').value.trim();
    const street = document.getElementById('street').value.trim();
    const city = document.getElementById('city').value.trim();
    const state = document.getElementById('state').value;
    const pincode = document.getElementById('pincode').value.trim();
    const phone = document.getElementById('phone').value.trim();

    // Check required fields
    if (!name || !houseName || !street || !city || !state || !pincode || !phone) {
        alert('All fields are required');
        return false;
    }

    // Validate name (3-50 characters, only letters and spaces)
    if (!/^[a-zA-Z\s]{3,50}$/.test(name)) {
        alert('Name should be 3-50 characters long and contain only letters and spaces');
        return false;
    }

    // Validate phone number (10 digits, starting with 6-9)
    if (!/^[6-9]\d{9}$/.test(phone)) {
        alert('Please enter a valid 10-digit mobile number starting with 6-9');
        return false;
    }

    // Validate pincode (6 digits)
    if (!/^\d{6}$/.test(pincode)) {
        alert('Please enter a valid 6-digit PIN code');
        return false;
    }

    return true;
}

document.getElementById('add-address-form').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    if (!validateAddressForm()) {
        return;
    }

    const formData = {
        name: document.getElementById('fullName').value.trim(),
        houseName: document.getElementById('houseName').value.trim(),
        street: document.getElementById('street').value.trim(),
        city: document.getElementById('city').value.trim(),
        state: document.getElementById('state').value,
        pincode: document.getElementById('pincode').value.trim(),
        phone: document.getElementById('phone').value.trim()
    };

    // Add loading state
    const submitButton = this.querySelector('button[type="submit"]');
    const originalText = submitButton.textContent;
    submitButton.disabled = true;
    submitButton.textContent = 'Saving...';

    try {
        const response = await fetch('/add-address', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData),
            credentials: 'include' // Add this to include cookies/session
        });

        if (!response.ok) {
            const data = await response.json();
            if (response.status === 401) {
                alert('Please login to add address');
                window.location.href = '/login';
                return;
            }
            throw new Error(data.message || 'Failed to add address');
        }

        const data = await response.json();

        if (data.success) {
            alert(data.message || 'Address added successfully');
            hideAddAddressModal();
            window.location.reload();
        } else {
            throw new Error(data.message || 'Failed to add address');
        }
    } catch (error) {
        console.error('Error adding address:', error);
        alert(error.message || 'Failed to add address. Please try again.');
    } finally {
        // Reset button state
        submitButton.disabled = false;
        submitButton.textContent = originalText;
    }
});

// Add input event listeners for real-time validation
document.getElementById('phone').addEventListener('input', function(e) {
    const input = e.target;
    // Remove any non-digit characters
    input.value = input.value.replace(/\D/g, '');
    
    // Ensure first digit is 6-9
    if (input.value.length === 1 && !/^[6-9]$/.test(input.value)) {
        input.value = '';
    }
    
    // Limit to 10 digits
    if (input.value.length > 10) {
        input.value = input.value.slice(0, 10);
    }
});

document.getElementById('pincode').addEventListener('input', function(e) {
    const input = e.target;
    // Remove any non-digit characters
    input.value = input.value.replace(/\D/g, '');
    
    // Limit to 6 digits
    if (input.value.length > 6) {
        input.value = input.value.slice(0, 6);
    }
});

document.getElementById('fullName').addEventListener('input', function(e) {
    const input = e.target;
    // Remove any non-letter characters except spaces
    input.value = input.value.replace(/[^a-zA-Z\s]/g, '');
    
    // Limit to 50 characters
    if (input.value.length > 50) {
        input.value = input.value.slice(0, 50);
    }
});

async function processCheckout() {
    if (selectedAddressIndex === null) {
        alert('Please Select Address');
        return;
    }

    try {
        const response = await fetch('/checkout/process', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                addressIndex: selectedAddressIndex
            })
        });

        const data = await response.json();

        if (data.success) {
            alert('Order Placed Successfully!');
            window.location.href = '/profile#orders';
        } else {
            alert('Checkout Failed');
        }
    } catch (error) {
        console.error('Error processing checkout:', error);
        alert('Oops... Something went wrong during checkout');
    }
}
</script>

<%- include("../../views/partials/user/footer") %>
