<%- include("../../views/partials/user/header") %>

<style>
    .checkout-container {
        max-width: 1200px;
        margin: 40px auto;
        padding: 20px;
        display: grid;
        grid-template-columns: 2fr 1fr;
        gap: 30px;
    }

    .addresses-section {
        background: #fff;
        padding: 25px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .order-summary {
        background: #fff;
        padding: 25px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        height: fit-content;
    }

    .address-card {
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 15px;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .address-card:hover {
        border-color: #1e918b;
        box-shadow: 0 2px 8px rgba(30,145,139,0.1);
    }

    .address-card.selected {
        border: 2px solid #1e918b;
        background-color: #f8ffff;
    }

    .address-details {
        margin: 10px 0;
    }

    .add-address-btn {
        width: 100%;
        padding: 12px;
        background-color: #fff;
        color: #1e918b;
        border: 2px dashed #1e918b;
        border-radius: 8px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s;
        margin-bottom: 20px;
    }

    .add-address-btn:hover {
        background-color: #f8ffff;
    }

    .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.5);
        z-index: 1000;
    }

    .modal-content {
        position: relative;
        background-color: #fff;
        margin: 10% auto;
        padding: 20px;
        width: 90%;
        max-width: 500px;
        border-radius: 8px;
    }

    .close-modal {
        position: absolute;
        right: 20px;
        top: 20px;
        font-size: 24px;
        cursor: pointer;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-group label {
        display: block;
        margin-bottom: 8px;
        font-weight: 500;
    }

    .form-group input {
        width: 100%;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 14px;
    }

    .cart-items {
        margin: 20px 0;
    }

    .cart-item {
        display: flex;
        align-items: center;
        padding: 10px 0;
        border-bottom: 1px solid #eee;
    }

    .cart-item img {
        width: 60px;
        height: 60px;
        object-fit: cover;
        margin-right: 15px;
        border-radius: 4px;
    }

    .item-details {
        flex-grow: 1;
    }

    .item-price {
        font-weight: bold;
        color: #1e918b;
    }

    .order-total {
        margin-top: 20px;
        padding-top: 20px;
        border-top: 2px solid #eee;
    }

    .total-row {
        display: flex;
        justify-content: space-between;
        margin-bottom: 10px;
    }

    .checkout-btn {
        width: 100%;
        padding: 15px;
        background-color: #1e918b;
        color: white;
        border: none;
        border-radius: 4px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: background-color 0.3s;
        margin-top: 20px;
    }

    .checkout-btn:hover {
        background-color: #167571;
    }

    .checkout-btn:disabled {
        background-color: #ccc;
        cursor: not-allowed;
    }

    .section-title {
        margin-bottom: 20px;
        color: #333;
        font-size: 1.5rem;
    }

    @media (max-width: 768px) {
        .checkout-container {
            grid-template-columns: 1fr;
        }
    }
</style>

<div class="checkout-container">
    <div class="addresses-section">
        <h2 class="section-title">Select Delivery Address</h2>
        <button class="add-address-btn" onclick="showAddAddressModal()">
            <i class="fas fa-plus"></i> Add New Address
        </button>
        
        <div id="addresses-container">
            <% if (user.addresses && user.addresses.length > 0) { %>
                <% user.addresses.forEach((address, index) => { %>
                    <div class="address-card" onclick="selectAddress('<%= index %>')" id="address-<%= index %>">
                        <h4><%= address.fullName %></h4>
                        <div class="address-details">
                            <p><%= address.address %></p>
                            <p><%= address.city %> - <%= address.pincode %></p>
                            <p>Phone: <%= address.phone %></p>
                        </div>
                    </div>
                <% }) %>
            <% } else { %>
                <p>No saved addresses found. Please add a new address.</p>
            <% } %>
        </div>
    </div>

    <div class="order-summary">
        <h2 class="section-title">Order Summary</h2>
        <div class="cart-items">
            <% if (cart && cart.items) { %>
                <% cart.items.forEach(item => { %>
                    <div class="cart-item">
                        <img src="/uploads/product-images/<%= item.product.productImage[0] %>" alt="<%= item.product.productName %>">
                        <div class="item-details">
                            <h4><%= item.product.productName %></h4>
                            <p>Quantity: <%= item.quantity %></p>
                            <p class="item-price">₹<%= (item.product.salePrice * item.quantity).toLocaleString('en-IN') %></p>
                        </div>
                    </div>
                <% }) %>
            <% } %>
        </div>

        <div class="order-total">
            <div class="total-row">
                <span>Subtotal:</span>
                <span>₹<%= cart.subtotal.toLocaleString('en-IN') %></span>
            </div>
            <div class="total-row">
                <span>Shipping:</span>
                <span>₹<%= cart.shipping.toLocaleString('en-IN') %></span>
            </div>
            <div class="total-row" style="font-weight: bold; font-size: 1.2em;">
                <span>Total:</span>
                <span>₹<%= cart.total.toLocaleString('en-IN') %></span>
            </div>
        </div>

        <button class="checkout-btn" id="place-order-btn" onclick="processCheckout()" disabled>Place Order</button>
    </div>
</div>

<!-- Add Address Modal -->
<div id="add-address-modal" class="modal">
    <div class="modal-content">
        <span class="close-modal" onclick="hideAddAddressModal()">&times;</span>
        <h2>Add New Address</h2>
        <form id="add-address-form">
            <div class="form-group">
                <label for="fullName">Full Name</label>
                <input type="text" id="fullName" name="fullName" required>
            </div>
            <div class="form-group">
                <label for="phone">Phone Number</label>
                <input type="tel" id="phone" name="phone" required>
            </div>
            <div class="form-group">
                <label for="address">Address</label>
                <input type="text" id="address" name="address" required>
            </div>
            <div class="form-group">
                <label for="city">City</label>
                <input type="text" id="city" name="city" required>
            </div>
            <div class="form-group">
                <label for="pincode">Pincode</label>
                <input type="text" id="pincode" name="pincode" required>
            </div>
            <button type="submit" class="checkout-btn">Save Address</button>
        </form>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
let selectedAddressIndex = null;

function selectAddress(index) {
    // Remove selected class from all addresses
    document.querySelectorAll('.address-card').forEach(card => {
        card.classList.remove('selected');
    });
    
    // Add selected class to clicked address
    const selectedCard = document.getElementById(`address-${index}`);
    selectedCard.classList.add('selected');
    
    // Enable place order button
    document.getElementById('place-order-btn').disabled = false;
    
    // Store selected address index
    selectedAddressIndex = index;
}

function showAddAddressModal() {
    document.getElementById('add-address-modal').style.display = 'block';
}

function hideAddAddressModal() {
    document.getElementById('add-address-modal').style.display = 'none';
}

// Close modal when clicking outside
window.onclick = function(event) {
    const modal = document.getElementById('add-address-modal');
    if (event.target == modal) {
        hideAddAddressModal();
    }
}

document.getElementById('add-address-form').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const formData = {
        fullName: document.getElementById('fullName').value,
        phone: document.getElementById('phone').value,
        address: document.getElementById('address').value,
        city: document.getElementById('city').value,
        pincode: document.getElementById('pincode').value
    };

    try {
        const response = await fetch('/profile/add-address', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        });

        const data = await response.json();

        if (data.success) {
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: 'Address added successfully',
                showConfirmButton: false,
                timer: 1500
            }).then(() => {
                window.location.reload();
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: data.message || 'Failed to add address'
            });
        }
    } catch (error) {
        console.error('Error adding address:', error);
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Something went wrong'
        });
    }
});

async function processCheckout() {
    if (selectedAddressIndex === null) {
        Swal.fire({
            icon: 'warning',
            title: 'Please Select Address',
            text: 'Please select a delivery address to continue'
        });
        return;
    }

    try {
        const response = await fetch('/checkout/process', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                addressIndex: selectedAddressIndex
            })
        });

        const data = await response.json();

        if (data.success) {
            Swal.fire({
                icon: 'success',
                title: 'Order Placed Successfully!',
                text: 'Thank you for your purchase',
                confirmButtonText: 'View Orders'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '/profile#orders';
                } else {
                    window.location.href = '/profile#orders';
                }
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Checkout Failed',
                text: data.message || 'Failed to process checkout'
            });
        }
    } catch (error) {
        console.error('Error processing checkout:', error);
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Something went wrong during checkout'
        });
    }
}
</script>

<%- include("../../views/partials/user/footer") %>
