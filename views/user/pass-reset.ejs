<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .password-container {
            position: relative;
        }
        .toggle-password {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            border: none;
            background: none;
        }
        .card {
            box-shadow: 0 0 15px rgba(0,0,0,0.1);
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body p-4">
                        <h3 class="text-center mb-4">Reset Password</h3>
                        <form id="resetPasswordForm">
                            <div class="mb-3 password-container">
                                <label for="currentPassword" class="form-label">Current Password</label>
                                <input type="password" class="form-control" id="currentPassword" name="currentPassword" required>
                                <button type="button" class="toggle-password" data-target="currentPassword">üëÅÔ∏è</button>
                            </div>
                            <div class="mb-3 password-container">
                                <label for="newPassword" class="form-label">New Password</label>
                                <input type="password" class="form-control" id="newPassword" name="newPassword" required>
                                <button type="button" class="toggle-password" data-target="newPassword">üëÅÔ∏è</button>
                            </div>
                            <div class="mb-3 password-container">
                                <label for="confirmPassword" class="form-label">Confirm New Password</label>
                                <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required>
                                <button type="button" class="toggle-password" data-target="confirmPassword">üëÅÔ∏è</button>
                            </div>
                            <div class="d-grid">
                                <button type="submit" class="btn btn-dark">Reset Password</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Password visibility toggle
            document.querySelectorAll('.toggle-password').forEach(button => {
                button.addEventListener('click', function() {
                    const targetId = this.getAttribute('data-target');
                    const input = document.getElementById(targetId);
                    if (input.type === 'password') {
                        input.type = 'text';
                        this.textContent = 'üîí';
                    } else {
                        input.type = 'password';
                        this.textContent = 'üëÅÔ∏è';
                    }
                });
            });

            // Form submission
            document.getElementById('resetPasswordForm').addEventListener('submit', async function(e) {
                e.preventDefault();

                const currentPassword = document.getElementById('currentPassword').value;
                const newPassword = document.getElementById('newPassword').value;
                const confirmPassword = document.getElementById('confirmPassword').value;

                // Validation
                if (newPassword.length < 6) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Invalid Password',
                        text: 'New password must be at least 6 characters long'
                    });
                    return;
                }

                if (newPassword !== confirmPassword) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Password Mismatch',
                        text: 'New password and confirm password do not match'
                    });
                    return;
                }

                try {
                    const response = await fetch('/update-password', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Accept': 'application/json'
                        },
                        body: JSON.stringify({
                            currentPassword,
                            newPassword,
                            confirmPassword
                        })
                    });

                    if (!response.ok) {
                        const contentType = response.headers.get("content-type");
                        if (contentType && contentType.indexOf("application/json") !== -1) {
                            const data = await response.json();
                            throw new Error(data.message || 'Failed to update password');
                        } else {
                            throw new Error('Server error occurred');
                        }
                    }

                    const data = await response.json();

                    if (response.ok) {
                        await Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: 'Password updated successfully',
                            timer: 2000,
                            showConfirmButton: false
                        });
                        window.location.href = '/userProfile';
                    } else {
                        throw new Error(data.message || 'Failed to update password');
                    }
                } catch (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: error.message || 'Something went wrong'
                    });
                }
            });
        });
    </script>
</body>
</html>